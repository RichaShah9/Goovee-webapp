{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/axelor/FrontEndProject/Websites/goovee-webapp/pages/components/Link/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\nimport { Children } from \"react\";\nexport default withRouter((_ref) => {\n  let {\n    router,\n    children,\n    as,\n    href\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"router\", \"children\", \"as\", \"href\"]);\n\n  return __jsx(Link, _extends({}, rest, {\n    href: href,\n    as: as,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.cloneElement(Children.only(children), {\n    className: router.asPath === href || router.asPath === as ? `active` : null\n  }));\n});","map":{"version":3,"sources":["/home/axelor/FrontEndProject/Websites/goovee-webapp/pages/components/Link/index.js"],"names":["React","Link","withRouter","Children","router","children","as","href","rest","cloneElement","only","className","asPath"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,eAAeD,UAAU,CAAC;AAAA,MAAC;AAACE,IAAAA,MAAD;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,EAAnB;AAAuBC,IAAAA;AAAvB,GAAD;AAAA,MAAiCC,IAAjC;;AAAA,SACvB,MAAC,IAAD,eAAUA,IAAV;AAAgB,IAAA,IAAI,EAAED,IAAtB;AAA4B,IAAA,EAAE,EAAED,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACIN,KAAK,CAACS,YAAN,CAAmBN,QAAQ,CAACO,IAAT,CAAcL,QAAd,CAAnB,EAA4C;AAC1CM,IAAAA,SAAS,EAAGP,MAAM,CAACQ,MAAP,KAAkBL,IAAlB,IAA0BH,MAAM,CAACQ,MAAP,KAAkBN,EAA7C,GAAoD,QAApD,GAA8D;AAD/B,GAA5C,CADJ,CADuB;AAAA,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport {withRouter} from \"next/router\";\nimport {Children} from \"react\";\n\nexport default withRouter(({router, children, as, href, ...rest}) => (\n   <Link {...rest} href={href} as={as}>\n      {React.cloneElement(Children.only(children), {\n         className: (router.asPath === href || router.asPath === as) ? `active` : null\n      })}\n   </Link>\n));"]},"metadata":{},"sourceType":"module"}